TAP version 14
Server is listening on 3000
# Subtest: POST /tasks
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 13
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:13:5)
      source: |2
          };
          const response = await server.post("/tasks").send(newTask);
          t.equal(response.status, 201);
        ----^
          t.end();
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -201
        +400
      ...
    
    1..1
not ok 1 - POST /tasks # time=260.958ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 6
    columnNumber: 5
    typeName: Object
  source: |
    const server = supertest(app);
  
    tap.test("POST /tasks", async (t) => {
    ----^
      const newTask = {
        title: "New Task",
  ...

# Subtest: POST /tasks with invalid data
    ok 1 - should be equal
    1..1
ok 2 - POST /tasks with invalid data # time=11.947ms

# Subtest: GET /tasks
    ok 1 - should be equal
    ok 2 - specified property should be defined own property
    ok 3 - specified property should be defined own property
    ok 4 - specified property should be defined own property
    ok 5 - specified property should be defined own property
    ok 6 - type is number
    ok 7 - type is string
    ok 8 - type is string
    ok 9 - type is boolean
    1..9
ok 3 - GET /tasks # time=11.082ms

[90mundefined[39m
{ message: [32m'Task not found'[39m }
# Subtest: GET /tasks/:id
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 42
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:42:5)
      source: |
        tap.test("GET /tasks/:id", async (t) => {
          const response = await server.get("/tasks/1");
          t.equal(response.status, 200);
        ----^
          const expectedTask = {
            id: 1,
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +404
      ...
    
    not ok 2 - should match pattern
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,6 +1,2 @@
         Object {
        -  "id": 1,
        -  "title": "Set up environment",
        -  "description": "Install Node.js, npm, and git",
        -  "completed": true,
         }
      at:
        fileName: test/server.test.js
        lineNumber: 49
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:49:5)
      source: |2
            completed: true,
          };
          t.match(response.body, expectedTask);
        ----^
          t.end();
        });
      ...
    
    1..2
not ok 4 - GET /tasks/:id # time=36.591ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 40
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("GET /tasks/:id", async (t) => {
    ----^
      const response = await server.get("/tasks/1");
      t.equal(response.status, 200);
  ...

[90mundefined[39m
{ message: [32m'Task not found'[39m }
# Subtest: GET /tasks/:id with invalid id
    ok 1 - should be equal
    1..1
ok 5 - GET /tasks/:id with invalid id # time=9.825ms

# Subtest: PUT /tasks/:id
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 66
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:66:5)
      source: |2
          };
          const response = await server.put("/tasks/1").send(updatedTask);
          t.equal(response.status, 200);
        ----^
          t.end();
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +404
      ...
    
    1..1
not ok 6 - PUT /tasks/:id # time=17.419ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 59
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("PUT /tasks/:id", async (t) => {
    ----^
      const updatedTask = {
        title: "Updated Task",
  ...

# Subtest: PUT /tasks/:id with invalid id
    ok 1 - should be equal
    1..1
ok 7 - PUT /tasks/:id with invalid id # time=6.705ms

# Subtest: PUT /tasks/:id with invalid data
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 88
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:88:5)
      source: |2
          };
          const response = await server.put("/tasks/1").send(updatedTask);
          t.equal(response.status, 400);
        ----^
          t.end();
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -400
        +404
      ...
    
    1..1
not ok 8 - PUT /tasks/:id with invalid data # time=14.507ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 81
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("PUT /tasks/:id with invalid data", async (t) => {
    ----^
      const updatedTask = {
        title: "Updated Task",
  ...

{ message: [32m'Task not found'[39m }
# Subtest: DELETE /tasks/:id
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 94
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:94:5)
      source: |
        tap.test("DELETE /tasks/:id", async (t) => {
          const response = await server.delete("/tasks/1");
          t.equal(response.status, 200);
        ----^
          t.end();
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +404
      ...
    
    1..1
not ok 9 - DELETE /tasks/:id # time=18.389ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 92
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("DELETE /tasks/:id", async (t) => {
    ----^
      const response = await server.delete("/tasks/1");
      t.equal(response.status, 200);
  ...

{ message: [32m'Task not found'[39m }
# Subtest: DELETE /tasks/:id with invalid id
    ok 1 - should be equal
    1..1
ok 10 - DELETE /tasks/:id with invalid id # time=8.977ms

1..10
